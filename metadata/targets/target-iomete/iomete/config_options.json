[{"source": "readme", "content": [{"Property": "host", "Type": "String", "Required?": "Yes", "Description": "iomete host (i.e. xyz12.iomete.com)"}, {"Property": "workspace_id", "Type": "String", "Required?": "Yes", "Description": "iomete workspace ID (i.e. abcde-123)"}, {"Property": "user", "Type": "String", "Required?": "Yes", "Description": "iomete User"}, {"Property": "password", "Type": "String", "Required?": "Yes", "Description": "iomete Password"}, {"Property": "lakehouse", "Type": "String", "Required?": "Yes", "Description": "iomete lakehouse name"}, {"Property": "database", "Type": "String", "Required?": "No", "Description": "database (or 'default')"}, {"Property": "aws_access_key_id", "Type": "String", "Required?": "No", "Description": "S3 Access Key Id. If not provided, AWS_ACCESS_KEY_ID environment variable or IAM role will be used"}, {"Property": "aws_secret_access_key", "Type": "String", "Required?": "No", "Description": "S3 Secret Access Key. If not provided, AWS_SECRET_ACCESS_KEY environment variable or IAM role will be used"}, {"Property": "aws_session_token", "Type": "String", "Required?": "No", "Description": "AWS Session token. If not provided, AWS_SESSION_TOKEN environment variable will be used"}, {"Property": "aws_profile", "Type": "String", "Required?": "No", "Description": "AWS profile name for profile based authentication. If not provided, AWS_PROFILE environment variable will be used."}, {"Property": "s3_bucket", "Type": "String", "Required?": "No", "Description": "S3 Bucket name. Required if to use S3 External stage. When this is defined then stage has to be defined as well."}, {"Property": "s3_key_prefix", "Type": "String", "Required?": "No", "Description": "(Default: None) A static prefix before the generated S3 key names. Using prefixes you can upload files into specific directories in the S3 bucket."}, {"Property": "s3_endpoint_url", "Type": "String", "Required?": "No", "Description": "The complete URL to use for the constructed client. This is allowing to use non-native s3 account."}, {"Property": "s3_region_name", "Type": "String", "Required?": "No", "Description": "Default region when creating new connections"}, {"Property": "s3_acl", "Type": "String", "Required?": "No", "Description": "S3 ACL name to set on the uploaded files"}, {"Property": "batch_size_rows", "Type": "Integer", "Required?": "", "Description": "(Default: 100000) Maximum number of rows in each batch. At the end of each batch, the rows in the batch are loaded into iomete."}, {"Property": "batch_wait_limit_seconds", "Type": "Integer", "Required?": "", "Description": "(Default: None) Maximum time to wait for batch to reach batch_size_rows."}, {"Property": "flush_all_streams", "Type": "Boolean", "Required?": "", "Description": "(Default: False) Flush and load every stream into iomete when one batch is full. Warning: This may trigger the COPY command to use files with low number of records, and may cause performance problems."}, {"Property": "parallelism", "Type": "Integer", "Required?": "", "Description": "(Default: 0) The number of threads used to flush tables. 0 will create a thread for each stream, up to parallelism_max. -1 will create a thread for each CPU core. Any other positive number will create that number of threads, up to parallelism_max. Parallelism works only with external stages. If no s3_bucket defined with an external stage then flusing tables is enforced to use a single thread."}, {"Property": "parallelism_max", "Type": "Integer", "Required?": "", "Description": "(Default: 16) Max number of parallel threads to use when flushing tables."}, {"Property": "default_target_schema", "Type": "String", "Required?": "", "Description": "Name of the schema where the tables will be created, without database prefix. If schema_mapping is not defined then every stream sent by the tap is loaded into this schema."}, {"Property": "schema_mapping", "Type": "Object", "Required?": "", "Description": "Useful if you want to load multiple streams from one tap to multiple iomete schemas"}, {"Property": "add_metadata_columns", "Type": "Boolean", "Required?": "", "Description": "(Default: False) Metadata columns add extra row level information about data ingestions, (i.e. when was the row read in source, when was inserted or deleted in iomete etc.) Metadata columns are creating automatically by adding extra columns to the tables with a column prefix _SDC_. The column names are following the stitch naming conventions documented at https://www.stitchdata.com/docs/data-structure/integration-schemas#sdc-columns. Enabling metadata columns will flag the deleted rows by setting the _SDC_DELETED_AT metadata column. Without the add_metadata_columns option the deleted rows from singer taps will not be recongisable in iomete."}, {"Property": "hard_delete", "Type": "Boolean", "Required?": "", "Description": "(Default: False) When hard_delete option is true then DELETE SQL commands will be performed in iomete to delete rows in tables. It's achieved by continuously checking the  _SDC_DELETED_AT metadata column sent by the singer tap. Due to deleting rows requires metadata columns, hard_delete option automatically enables the add_metadata_columns option as well."}, {"Property": "data_flattening_max_level", "Type": "Integer", "Required?": "", "Description": "(Default: 0) Object type RECORD items from taps can be loaded into STRUCT columns as JSON (default) or we can flatten the schema by creating columns automatically.When value is 0 (default) then flattening functionality is turned off."}, {"Property": "primary_key_required", "Type": "Boolean", "Required?": "", "Description": "(Default: True) Log based and Incremental replications on tables with no Primary Key cause duplicates when merging UPDATE events. When set to true, stop loading data if no Primary Key is defined."}, {"Property": "validate_records", "Type": "Boolean", "Required?": "", "Description": "(Default: False) Validate every single record message to the corresponding JSON schema. This option is disabled by default and invalid RECORD messages will fail only at load time by iomete. Enabling this option will detect invalid records earlier but could cause performance degradation."}, {"Property": "temp_dir", "Type": "String", "Required?": "", "Description": "(Default: platform-dependent) Directory of temporary files with RECORD messages."}, {"Property": "no_compression?", "Type": "Boolean", "Required?": "", "Description": "(Default: False) Generate uncompressed files when loading to iomete. Normally, by default GZIP compressed files are generated."}], "instance": 0}]