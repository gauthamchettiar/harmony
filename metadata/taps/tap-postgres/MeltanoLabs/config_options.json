[{"source": "readme", "content": [{"Setting": "host", "Required": false, "Default": "None", "Description": "Hostname for postgres instance. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "port", "Required": false, "Default": "5432", "Description": "The port on which postgres is awaiting connection. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "user", "Required": false, "Default": "None", "Description": "User name used to authenticate. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "password", "Required": false, "Default": "None", "Description": "Password used to authenticate. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "database", "Required": false, "Default": "None", "Description": "Database name. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "max_record_count", "Required": false, "Default": "None", "Description": "Optional. The maximum number of records to return in a single stream."}, {"Setting": "sqlalchemy_url", "Required": false, "Default": "None", "Description": "Example postgresql://[username]:[password]@localhost:5432/[db_name]"}, {"Setting": "filter_schemas", "Required": false, "Default": "None", "Description": "If an array of schema names is provided, the tap will only process the specified Postgres schemas and ignore others. If left blank, the tap automatically determines ALL available Postgres schemas."}, {"Setting": "dates_as_string", "Required": false, "Default": "0", "Description": "Defaults to false, if true, date, and timestamp fields will be Strings. If you see ValueError: Year is out of range, try setting this to True."}, {"Setting": "ssh_tunnel", "Required": false, "Default": "None", "Description": "SSH Tunnel Configuration, this is a json object"}, {"Setting": "ssh_tunnel.enable", "Required": false, "Default": "0", "Description": "Enable an ssh tunnel (also known as bastion server), see the other ssh_tunnel.* properties for more details"}, {"Setting": "ssh_tunnel.host", "Required": false, "Default": "None", "Description": "Host of the bastion server, this is the host we'll connect to via ssh"}, {"Setting": "ssh_tunnel.username", "Required": false, "Default": "None", "Description": "Username to connect to bastion server"}, {"Setting": "ssh_tunnel.port", "Required": false, "Default": "22", "Description": "Port to connect to bastion server"}, {"Setting": "ssh_tunnel.private_key", "Required": false, "Default": "None", "Description": "Private Key for authentication to the bastion server"}, {"Setting": "ssh_tunnel.private_key_password", "Required": false, "Default": "None", "Description": "Private Key Password, leave None if no password is set"}, {"Setting": "ssl_enable", "Required": false, "Default": "0", "Description": "Whether or not to use ssl to verify the server's identity. Use ssl_certificate_authority and ssl_mode for further customization. To use a client certificate to authenticate yourself to the server, use ssl_client_certificate_enable instead. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "ssl_client_certificate_enable", "Required": false, "Default": "0", "Description": "Whether or not to provide client-side certificates as a method of authentication to the server. Use ssl_client_certificate and ssl_client_private_key for further customization. To use SSL to verify the server's identity, use ssl_enable instead. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "ssl_mode", "Required": false, "Default": "verify-full", "Description": "SSL Protection method, see postgres documentation for more information. Must be one of disable, allow, prefer, require, verify-ca, or verify-full. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "ssl_certificate_authority", "Required": false, "Default": "~/.postgresql/root.crl", "Description": "The certificate authority that should be used to verify the server's identity. Can be provided either as the certificate itself (in .env) or as a filepath to the certificate. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "ssl_client_certificate", "Required": false, "Default": "~/.postgresql/postgresql.crt", "Description": "The certificate that should be used to verify your identity to the server. Can be provided either as the certificate itself (in .env) or as a filepath to the certificate. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "ssl_client_private_key", "Required": false, "Default": "~/.postgresql/postgresql.key", "Description": "The private key for the certificate you provided. Can be provided either as the certificate itself (in .env) or as a filepath to the certificate. Note if sqlalchemy_url is set this will be ignored."}, {"Setting": "ssl_storage_directory", "Required": false, "Default": ".secrets", "Description": "The folder in which to store SSL certificates provided as raw values. When a certificate/key is provided as a raw value instead of as a filepath, it must be written to a file before it can be used. This configuration option determines where that file is created."}, {"Setting": "default_replication_method", "Required": false, "Default": "FULL_TABLE", "Description": "Replication method to use if there is not a catalog entry to override this choice. One of FULL_TABLE, INCREMENTAL, or LOG_BASED."}, {"Setting": "stream_maps", "Required": false, "Default": "None", "Description": "Config object for stream maps capability. For more information check out Stream Maps."}, {"Setting": "stream_map_config", "Required": false, "Default": "None", "Description": "User-defined config values to be used within map expressions."}, {"Setting": "faker_config", "Required": false, "Default": "None", "Description": "Config for the Faker instance variable fake used within map expressions. Only applicable if the plugin specifies faker as an addtional dependency (through the singer-sdk faker extra or directly)."}, {"Setting": "faker_config.seed", "Required": false, "Default": "None", "Description": "Value to seed the Faker generator for deterministic output: https://faker.readthedocs.io/en/master/#seeding-the-generator"}, {"Setting": "faker_config.locale", "Required": false, "Default": "None", "Description": "One or more LCID locale strings to produce localized output for: https://faker.readthedocs.io/en/master/#localization"}, {"Setting": "flattening_enabled", "Required": false, "Default": "None", "Description": "'True' to enable schema flattening and automatically expand nested properties."}, {"Setting": "flattening_max_depth", "Required": false, "Default": "None", "Description": "The max depth to flatten schemas."}, {"Setting": "batch_config", "Required": false, "Default": "None", "Description": ""}, {"Setting": "batch_config.encoding", "Required": false, "Default": "None", "Description": "Specifies the format and compression of the batch files."}, {"Setting": "batch_config.encoding.format", "Required": false, "Default": "None", "Description": "Format to use for batch files."}, {"Setting": "batch_config.encoding.compression", "Required": false, "Default": "None", "Description": "Compression format to use for batch files."}, {"Setting": "batch_config.storage", "Required": false, "Default": "None", "Description": "Defines the storage layer to use when writing batch files"}, {"Setting": "batch_config.storage.root", "Required": false, "Default": "None", "Description": "Root path to use when writing batch files."}, {"Setting": "batch_config.storage.prefix", "Required": false, "Default": "None", "Description": "Prefix to use when writing batch files."}], "instance": 0}]